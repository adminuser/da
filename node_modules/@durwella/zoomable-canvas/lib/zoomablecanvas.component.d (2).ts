import { AfterViewInit, ElementRef, EventEmitter } from '@angular/core';
export declare class ZoomableCanvasComponent implements AfterViewInit {
    canvasRef: ElementRef;
    private canvas;
    private context;
    private imageValue;
    maxZoom: number;
    minZoom: number;
    imgSrc: string;
    private topValue;
    topChange: EventEmitter<number>;
    private bottomValue;
    bottomChange: EventEmitter<number>;
    private leftValue;
    leftChange: EventEmitter<number>;
    private rightValue;
    rightChange: EventEmitter<number>;
    private zoomLevelValue;
    zoomLevelChange: EventEmitter<number>;
    private centerXValue;
    centerXChange: EventEmitter<number>;
    private centerYValue;
    centerYChange: EventEmitter<number>;
    canvasWidthChange: EventEmitter<number>;
    canvasHeightChange: EventEmitter<number>;
    private zoomRatio;
    private dragPos;
    ngAfterViewInit(): void;
    private initialize();
    private loadImage(image);
    private draw(center, zoomRatio);
    image: HTMLImageElement;
    top: number;
    bottom: number;
    left: number;
    right: number;
    zoomLevel: number;
    private clampZoomLevel(zoomLevel);
    centerX: number;
    private setCenterX(val, redraw);
    centerY: number;
    private setCenterY(val, redraw);
    private clampCenter(val, length);
    private rescale(previousZoomRatio, newZoomRatio, center?);
    mousedown(event: MouseEvent): void;
    mousemove(event: MouseEvent): void;
    mousewheel(event: WheelEvent): void;
    onresize(): void;
}
